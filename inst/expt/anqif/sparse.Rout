
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> library(cvxr)

Attaching package: 'cvxr'

The following object is masked from 'package:stats':

    reshape

The following objects are masked from 'package:base':

    F, trace

> library(Matrix)
> i <- c(1,3:8)
> j <- c(2,9,6:10)
> x <- 7 * (1:7)
> A <- sparseMatrix(i, j, x = x)     # 8 x 10 "dgCMatrix"
> aMat <- Constant(A)
> canonicalize(aMat)
[[1]]
[[1]]$type
[1] "sparse_const"

[[1]]$size
[1]  8 10

[[1]]$args
list()

[[1]]$data
8 x 10 sparse Matrix of class "dgCMatrix"

[1,] . 7 . . .  .  .  .  .  .
[2,] . . . . .  .  .  .  .  .
[3,] . . . . .  .  .  . 14  .
[4,] . . . . . 21  .  .  .  .
[5,] . . . . .  . 28  .  .  .
[6,] . . . . .  .  . 35  .  .
[7,] . . . . .  .  .  . 42  .
[8,] . . . . .  .  .  .  . 49

[[1]]$class
[1] "LinOp"


[[2]]
list()

> summary(A)
8 x 10 sparse Matrix of class "dgCMatrix", with 7 entries
  i  j  x
1 1  2  7
2 4  6 21
3 5  7 28
4 6  8 35
5 3  9 14
6 7  9 42
7 8 10 49
> m <- nrow(A)
> n <- ncol(A)
> y <- Variable(n)
> objective <- Minimize(SumEntries(A*y))
Note: method with signature 'ConstVal#Expression' chosen for function '*',
 target signature 'dgCMatrix#Variable'.
 "Matrix#ANY" would also be valid
> constraint <- list(1 <= y)
> prob <- Problem(objective, constraint)
> result <- cvxr_solve(prob)
[1] "Calling CVXcanon"
LinOp id bb72fd79-65e4-482b-a3ad-ce26b7de89ab Created!
LinOp id d563cbb7-daaa-4ad4-9f4e-9c88cffb6802 Created!
LinOp Id bb72fd79-65e4-482b-a3ad-ce26b7de89ab type now 10
LinOp id 5f32d891-a989-42c3-a20b-dec159c5470b Created!
LinOp Id d563cbb7-daaa-4ad4-9f4e-9c88cffb6802 type now 2
LinOp Id 5f32d891-a989-42c3-a20b-dec159c5470b type now 0
LinOpVector id 495dfc6d-ef77-4783-9493-c7e418b796a8 Created!
LinOp id 9192a7f6-1de6-49e0-ad27-565586eacc5d Created!
LinOp Id 9192a7f6-1de6-49e0-ad27-565586eacc5d type now 25
LinOp id 678c34a8-910b-431d-95ec-b2fe80ba6650 Created!
LinOp id 44f495df-4340-4f48-b839-9d4ecdf2ac82 Created!
LinOp id 0626f4d2-7b28-47a8-b911-69c76696c2b7 Created!
LinOp Id 678c34a8-910b-431d-95ec-b2fe80ba6650 type now 6
LinOp id 22ae7394-6b00-4740-8e9f-fa1b9ec73aae Created!
LinOp Id 44f495df-4340-4f48-b839-9d4ecdf2ac82 type now 1
LinOp id eed39451-6402-408f-8aa0-b7984b4610b9 Created!
LinOp Id 0626f4d2-7b28-47a8-b911-69c76696c2b7 type now 7
LinOp Id 22ae7394-6b00-4740-8e9f-fa1b9ec73aae type now 19
LinOp Id eed39451-6402-408f-8aa0-b7984b4610b9 type now 0
Objective:
[1] "LinOp(id=bb72fd79-65e4-482b-a3ad-ce26b7de89ab, type=SUM_ENTRIES, size=[1, 1], args=[ LinOp(id=d563cbb7-daaa-4ad4-9f4e-9c88cffb6802, type=MUL, size=[8, 1], args=[ LinOp(id=5f32d891-a989-42c3-a20b-dec159c5470b, type=VARIABLE, size=[10, 1], args=[  ], data=[4]) ], data=[]) ], data=[])"
Constraints:
[1] "[ LinOp(id=9192a7f6-1de6-49e0-ad27-565586eacc5d, type=LEQ, size=[10, 1], args=[ LinOp(id=678c34a8-910b-431d-95ec-b2fe80ba6650, type=SUM, size=[10, 1], args=[ LinOp(id=44f495df-4340-4f48-b839-9d4ecdf2ac82, type=PROMOTE, size=[10, 1], args=[ LinOp(id=22ae7394-6b00-4740-8e9f-fa1b9ec73aae, type=SCALAR_CONST, size=[1, 1], args=[  ], data=[1]) ], data=[]), LinOp(id=0626f4d2-7b28-47a8-b911-69c76696c2b7, type=NEG, size=[10, 1], args=[ LinOp(id=eed39451-6402-408f-8aa0-b7984b4610b9, type=VARIABLE, size=[10, 1], args=[  ], data=[4]) ], data=[]) ], data=[]) ], data=[2]) ]"
25
After constraints
After solver options
25
In filter_constraints
25
In filter_constraints (before return)
25
After constr_map
After compute_dimensions
After get_vars_and_offsets
Before Ecos
before problem data
after problem data
after eq constrs
after leq constrs
after soc constrs
after ineq constrs
before objdata

 *** caught segfault ***
address 0x0, cause 'memory not mapped'

Traceback:
 1: .Call(rcppMungedName(cppClassName = private$myClassName, methodName = "solve",     thisPkg = pkg), sense, objective$getXPtr(), constraints$getXPtr(),     solverOptions, PACKAGE = pkg)
 2: cvxCanon$solve(C_sense, C_objective, C_constraints, C_opts)
 3: solve(sense, canon_objective, constraints, verbose, ...)
 4: cvxr_solve(prob)
 5: cvxr_solve(prob)

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
Selection: 3

Process R exited abnormally with code 70 at Fri Aug 12 11:28:49 2016
