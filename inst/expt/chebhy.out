Python 2.7.12 |Anaconda 4.1.1 (x86_64)| (default, Jul  2 2016, 17:43:17)
Type "copyright", "credits" or "license" for more information.

IPython 4.2.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.
/Users/naras/anaconda/lib/python2.7/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')
Using matplotlib backend: MacOSX

In [1]:
In [2]:
In [3]:
In [4]:
In [5]:
In [6]: %run chebhy.py
Calling CVXcanon
<class 'cvxpy.problems.objective.Maximize'>
LinOp(type='neg', size=(1, 1), args=[LinOp(type='neg', size=(1, 1), args=[LinOp(type='variable', size=(1, 1), args=[], data=0)], data=None)], data=None)

LinLeqConstr(expr=LinOp(type='sum', size=(1, 1), args=[LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(2, 1), args=[], data=1)], data=LinOp(type='dense_const', size=(1, 2), args=[], data=matrix([[ 2.,  1.]]))), LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(1, 1), args=[], data=0)], data=LinOp(type='scalar_const', size=(1, 1), args=[], data=2.2360679774997898)), LinOp(type='scalar_const', size=(1, 1), args=[], data=-1)], data=None), constr_id=2, size=(1, 1))

LinLeqConstr(expr=LinOp(type='sum', size=(1, 1), args=[LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(2, 1), args=[], data=1)], data=LinOp(type='dense_const', size=(1, 2), args=[], data=matrix([[ 2., -1.]]))), LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(1, 1), args=[], data=0)], data=LinOp(type='scalar_const', size=(1, 1), args=[], data=2.2360679774997898)), LinOp(type='scalar_const', size=(1, 1), args=[], data=-1)], data=None), constr_id=3, size=(1, 1))
LinLeqConstr(expr=LinOp(type='sum', size=(1, 1), args=[LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(2, 1), args=[], data=1)], data=LinOp(type='dense_const', size=(1, 2), args=[], data=matrix([[-1.,  2.]]))), LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(1, 1), args=[], data=0)], data=LinOp(type='scalar_const', size=(1, 1), args=[], data=2.2360679774997898)), LinOp(type='scalar_const', size=(1, 1), args=[], data=-1)], data=None), constr_id=4, size=(1, 1))
LinLeqConstr(expr=LinOp(type='sum', size=(1, 1), args=[LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(2, 1), args=[], data=1)], data=LinOp(type='dense_const', size=(1, 2), args=[], data=matrix([[-1., -2.]]))), LinOp(type='mul', size=(1, 1), args=[LinOp(type='variable', size=(1, 1), args=[], data=0)], data=LinOp(type='scalar_const', size=(1, 1), args=[], data=2.2360679774997898)), LinOp(type='scalar_const', size=(1, 1), args=[], data=-1)], data=None), constr_id=5, size=(1, 1))
{}

ECOS 2.0.4 - (C) embotech GmbH, Zurich Switzerland, 2012-15. Web: www.embotech.com/ECOS

It     pcost       dcost      gap   pres   dres    k/t    mu     step   sigma     IR    |   BT
 0  -4.472e-01  -4.740e-01  +7e-03  1e-02  3e-02  1e+00  2e-01    ---    ---    0  1  - |  -  -
 1  -4.471e-01  -4.475e-01  +2e-04  1e-04  3e-04  1e-02  2e-03  0.9890  1e-04   1  1  1 |  0  0
 2  -4.472e-01  -4.472e-01  +3e-06  1e-06  4e-06  1e-04  2e-05  0.9890  1e-04   1  1  1 |  0  0
 3  -4.472e-01  -4.472e-01  +4e-08  1e-08  4e-08  1e-06  3e-07  0.9890  1e-04   1  0  0 |  0  0
 4  -4.472e-01  -4.472e-01  +5e-10  2e-10  5e-10  1e-08  3e-09  0.9890  1e-04   2  0  0 |  0  0

OPTIMAL (within feastol=4.6e-10, reltol=1.2e-09, abstol=5.5e-10).
Runtime: 0.049314 seconds.

CVXcanon optimal value:  0.447213595052

ECOS 2.0.4 - (C) embotech GmbH, Zurich Switzerland, 2012-15. Web: www.embotech.com/ECOS

It     pcost       dcost      gap   pres   dres    k/t    mu     step   sigma     IR    |   BT
 0  -4.472e-01  -4.740e-01  +7e-03  1e-02  3e-02  1e+00  2e-01    ---    ---    0  1  - |  -  -
 1  -4.471e-01  -4.475e-01  +2e-04  1e-04  3e-04  1e-02  2e-03  0.9890  1e-04   1  1  1 |  0  0
 2  -4.472e-01  -4.472e-01  +3e-06  1e-06  4e-06  1e-04  2e-05  0.9890  1e-04   1  1  1 |  0  0
 3  -4.472e-01  -4.472e-01  +4e-08  1e-08  4e-08  1e-06  3e-07  0.9890  1e-04   1  0  0 |  0  0
 4  -4.472e-01  -4.472e-01  +5e-10  2e-10  5e-10  1e-08  3e-09  0.9890  1e-04   2  0  0 |  0  0

OPTIMAL (within feastol=4.6e-10, reltol=1.2e-09, abstol=5.5e-10).
Runtime: 0.099154 seconds.

0.447213595052
[[ -2.64372813e-10]
 [ -5.61449853e-17]]

In [9]:
In [9]:
Do you really want to exit ([y]/n)? y

Process ipython finished
